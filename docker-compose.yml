version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: cicd/docker/Dockerfile.dev
    volumes:
      - .:/app
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
    environment:
      - CONFIG_FILE=/app/configs/app.local.yml
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: go_template
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d go_template"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrations:
    build:
      context: .
      dockerfile: cicd/docker/Dockerfile.migrations
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: